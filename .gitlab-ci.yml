image: registry.meia8.com/john/maven:3.3.9-jdk-8

stages:
- build
- deploy
- seelog

variables:
  CONTAINER_REGISTRY: registry.meia8.com
  CONTAINER_RELEASE_IMAGE_MASTER: $CONTAINER_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest 
  CONTAINER_RELEASE_IMAGE_RELEASE: $CONTAINER_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:release
  CONTAINER_RELEASE_IMAGE_DEVELOP: $CONTAINER_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:develop
  CONTAINER_RELEASE_IMAGE_HOTFIXES: $CONTAINER_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:hotfixes
  CONTAINER_RELEASE_IMAGE_MASTER_TAG: $CONTAINER_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_TAG 

build-tags:
  stage: build
  script:
  - mvn package  
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CONTAINER_REGISTRY
  - docker build -t $CONTAINER_RELEASE_IMAGE_MASTER .
  - docker tag $CONTAINER_RELEASE_IMAGE_MASTER $CONTAINER_RELEASE_IMAGE_MASTER_TAG
  - docker push $CONTAINER_RELEASE_IMAGE_MASTER
  - docker push $CONTAINER_RELEASE_IMAGE_MASTER_TAG
  only:
    - tags
build-master:
  stage: build
  script:
  - mvn package
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CONTAINER_REGISTRY
  - docker build -t $CONTAINER_RELEASE_IMAGE_MASTER .
  - docker push $CONTAINER_RELEASE_IMAGE_MASTER
  only:
    - master
build-hotfixes:
  stage: build
  script:
  - mvn package  
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CONTAINER_REGISTRY
  - docker build -t $CONTAINER_RELEASE_IMAGE_HOTFIXES .
  - docker push $CONTAINER_RELEASE_IMAGE_HOTFIXES
  only:
    - hotfixes
build-release:
  stage: build
  script:
  - mvn package  
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CONTAINER_REGISTRY
  - docker build -t $CONTAINER_RELEASE_IMAGE_RELEASE .
  - docker push $CONTAINER_RELEASE_IMAGE_RELEASE
  only:
    - release
build-develop:
  stage: build
  script:
  - mvn package  
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CONTAINER_REGISTRY
  - docker build -t $CONTAINER_RELEASE_IMAGE_DEVELOP .
  - docker push $CONTAINER_RELEASE_IMAGE_DEVELOP
  only:
    - develop
deploy-master:
  stage: deploy
  script:
    - kubectl delete -f deployment.yaml
    - kubectl create -f deployment.yaml
  when: manual
  environment:
    name: staging
    url: http://app.quanmeishi.cn
  only:
  - master
deploy-develop:
  stage: deploy
  script:
    - kubectl delete -f deployment.yaml
    - kubectl create -f deployment.yaml
  when: manual
  environment:
    name: staging
    url: https://app-dev.qms888.com/api-customer
  only:
  - develop

seelog-develop:
  stage: seelog
  script:
    - kubectl logs -f --limit-bytes=1000000 --since=1m $(kubectl get pods --namespace=development -l app=myyshop -o name) --namespace=development
  when: manual
  only:
  - master

seelog-sms:
  stage: seelog
  script:
    - kubectl logs -f --limit-bytes=100000 --since=1m $(kubectl get pods --namespace=development -l app=sms -o name) sms --namespace=development
  when: manual
  only:
  - master
  
    
